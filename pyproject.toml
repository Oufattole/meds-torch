[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
meds_torch = ["**/*.yaml"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc"]

[project]
name = "meds-torch"
dynamic = ["version"]
authors = [
  {name="Matthew McDermott", email="mattmcdermott8@gmail.com"},
  {name="Nassim Oufattole", email="noufattole@gmail.com"},
  {name="Teya Bergamaschi", email="teyabergamaschi@gmail.com"},
  {name="Aleksia Kolo", email="aleksiakolo@gmail.com"},
]
description = "A MEDS PyTorch Dataset, leveraging a on-the-fly retrieval strategy for flexible, efficient data loading."
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "polars", "pyarrow", "nested_ragged_tensors>=0.1.0", "loguru", "numpy", "ml-mixins", "torch", "omegaconf", "hydra-core",
    "lightning", "x-transformers==1.34.0", "rich", "hydra-colorlog", "hydra-optuna-sweeper", "wandb", "torchmetrics",
    "torchvision", "transformers", "ray[tune]",
]

[tool.setuptools_scm]

[project.optional-dependencies]
dev = ["pre-commit<4","notebook", "pdbpp"]
tests = ["pytest", "pytest-cov[toml]", "rootutils", "pytest-sugar", "pytest-instafail", "pytest-xdist", "sh", "MEDS-transforms>=0.0.9", "pytest-loguru"]
docs = [
    "mkdocs==1.6.0",
    "mkdocs-gen-files==0.5.0",
    "mkdocs-get-deps==0.2.0",
    "mkdocs-git-authors-plugin==0.9.0",
    "mkdocs-git-revision-date-localized-plugin==1.2.7",
    "mkdocs-literate-nav==0.6.1",
    "mkdocs-material==9.5.33",
    "mkdocs-material-extensions==1.3.1",
    "mkdocs-section-index==0.3.9",
    "mkdocs-snippets==1.3.0",
    "mkdocstrings==0.25.2",
    "mkdocstrings-python==1.10.8"
]

[pytest]
looponfailroots = ["tests"]

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"
markers = [
  "slow: slow tests",
]
minversion = "6.0"
testpaths = ["tests/", "src/meds_torch"]
norecursedirs = ["helpers"]

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]

[project.urls]
Homepage = "https://github.com/oufattole/meds-torch"
Issues = "https://github.com/oufattole/meds-torch/issues"

[project.scripts]
meds-torch-generate = "meds_torch.generate_trajectories:main"
meds-torch-predict = "meds_torch.predict:main"
meds-torch-train = "meds_torch.train:main"
meds-torch-eval = "meds_torch.eval:main"
meds-torch-finetune = "meds_torch.finetune:main"
meds-torch-tune = "meds_torch.tune:main"
meds-torch-latest-dir = "meds_torch.latest_dir:main"
